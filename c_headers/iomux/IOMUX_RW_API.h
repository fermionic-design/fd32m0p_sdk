#include "IOMUX_REGS.h"

static inline void IOMUX_PA_0_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_0.packed_w =  + ((output_en<<IOMUX_PA_0_OUTPUT_EN_OFS)&IOMUX_PA_0_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_0_INPUT_EN_OFS)&IOMUX_PA_0_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_0_DRIVE_STRENGTH_OFS)&IOMUX_PA_0_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_0_SLEW_RATE_OFS)&IOMUX_PA_0_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_0_PULL_UP_OFS)&IOMUX_PA_0_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_0_PULL_DOWN_OFS)&IOMUX_PA_0_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_0_HYSTERESIS_OFS)&IOMUX_PA_0_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_0_SEL_OFS)&IOMUX_PA_0_SEL_MASK) + ((input_val<<IOMUX_PA_0_INPUT_VAL_OFS)&IOMUX_PA_0_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_1_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_1.packed_w =  + ((output_en<<IOMUX_PA_1_OUTPUT_EN_OFS)&IOMUX_PA_1_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_1_INPUT_EN_OFS)&IOMUX_PA_1_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_1_DRIVE_STRENGTH_OFS)&IOMUX_PA_1_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_1_SLEW_RATE_OFS)&IOMUX_PA_1_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_1_PULL_UP_OFS)&IOMUX_PA_1_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_1_PULL_DOWN_OFS)&IOMUX_PA_1_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_1_HYSTERESIS_OFS)&IOMUX_PA_1_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_1_SEL_OFS)&IOMUX_PA_1_SEL_MASK) + ((input_val<<IOMUX_PA_1_INPUT_VAL_OFS)&IOMUX_PA_1_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_2_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_2.packed_w =  + ((output_en<<IOMUX_PA_2_OUTPUT_EN_OFS)&IOMUX_PA_2_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_2_INPUT_EN_OFS)&IOMUX_PA_2_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_2_DRIVE_STRENGTH_OFS)&IOMUX_PA_2_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_2_SLEW_RATE_OFS)&IOMUX_PA_2_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_2_PULL_UP_OFS)&IOMUX_PA_2_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_2_PULL_DOWN_OFS)&IOMUX_PA_2_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_2_HYSTERESIS_OFS)&IOMUX_PA_2_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_2_SEL_OFS)&IOMUX_PA_2_SEL_MASK) + ((input_val<<IOMUX_PA_2_INPUT_VAL_OFS)&IOMUX_PA_2_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_3_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_3.packed_w =  + ((output_en<<IOMUX_PA_3_OUTPUT_EN_OFS)&IOMUX_PA_3_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_3_INPUT_EN_OFS)&IOMUX_PA_3_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_3_DRIVE_STRENGTH_OFS)&IOMUX_PA_3_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_3_SLEW_RATE_OFS)&IOMUX_PA_3_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_3_PULL_UP_OFS)&IOMUX_PA_3_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_3_PULL_DOWN_OFS)&IOMUX_PA_3_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_3_HYSTERESIS_OFS)&IOMUX_PA_3_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_3_SEL_OFS)&IOMUX_PA_3_SEL_MASK) + ((input_val<<IOMUX_PA_3_INPUT_VAL_OFS)&IOMUX_PA_3_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_4_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_4.packed_w =  + ((output_en<<IOMUX_PA_4_OUTPUT_EN_OFS)&IOMUX_PA_4_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_4_INPUT_EN_OFS)&IOMUX_PA_4_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_4_DRIVE_STRENGTH_OFS)&IOMUX_PA_4_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_4_SLEW_RATE_OFS)&IOMUX_PA_4_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_4_PULL_UP_OFS)&IOMUX_PA_4_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_4_PULL_DOWN_OFS)&IOMUX_PA_4_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_4_HYSTERESIS_OFS)&IOMUX_PA_4_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_4_SEL_OFS)&IOMUX_PA_4_SEL_MASK) + ((input_val<<IOMUX_PA_4_INPUT_VAL_OFS)&IOMUX_PA_4_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_5_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_5.packed_w =  + ((output_en<<IOMUX_PA_5_OUTPUT_EN_OFS)&IOMUX_PA_5_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_5_INPUT_EN_OFS)&IOMUX_PA_5_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_5_DRIVE_STRENGTH_OFS)&IOMUX_PA_5_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_5_SLEW_RATE_OFS)&IOMUX_PA_5_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_5_PULL_UP_OFS)&IOMUX_PA_5_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_5_PULL_DOWN_OFS)&IOMUX_PA_5_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_5_HYSTERESIS_OFS)&IOMUX_PA_5_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_5_SEL_OFS)&IOMUX_PA_5_SEL_MASK) + ((input_val<<IOMUX_PA_5_INPUT_VAL_OFS)&IOMUX_PA_5_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_6_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_6.packed_w =  + ((output_en<<IOMUX_PA_6_OUTPUT_EN_OFS)&IOMUX_PA_6_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_6_INPUT_EN_OFS)&IOMUX_PA_6_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_6_DRIVE_STRENGTH_OFS)&IOMUX_PA_6_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_6_SLEW_RATE_OFS)&IOMUX_PA_6_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_6_PULL_UP_OFS)&IOMUX_PA_6_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_6_PULL_DOWN_OFS)&IOMUX_PA_6_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_6_HYSTERESIS_OFS)&IOMUX_PA_6_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_6_SEL_OFS)&IOMUX_PA_6_SEL_MASK) + ((input_val<<IOMUX_PA_6_INPUT_VAL_OFS)&IOMUX_PA_6_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_7_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_7.packed_w =  + ((output_en<<IOMUX_PA_7_OUTPUT_EN_OFS)&IOMUX_PA_7_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_7_INPUT_EN_OFS)&IOMUX_PA_7_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_7_DRIVE_STRENGTH_OFS)&IOMUX_PA_7_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_7_SLEW_RATE_OFS)&IOMUX_PA_7_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_7_PULL_UP_OFS)&IOMUX_PA_7_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_7_PULL_DOWN_OFS)&IOMUX_PA_7_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_7_HYSTERESIS_OFS)&IOMUX_PA_7_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_7_SEL_OFS)&IOMUX_PA_7_SEL_MASK) + ((input_val<<IOMUX_PA_7_INPUT_VAL_OFS)&IOMUX_PA_7_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_8_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_8.packed_w =  + ((output_en<<IOMUX_PA_8_OUTPUT_EN_OFS)&IOMUX_PA_8_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_8_INPUT_EN_OFS)&IOMUX_PA_8_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_8_DRIVE_STRENGTH_OFS)&IOMUX_PA_8_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_8_SLEW_RATE_OFS)&IOMUX_PA_8_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_8_PULL_UP_OFS)&IOMUX_PA_8_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_8_PULL_DOWN_OFS)&IOMUX_PA_8_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_8_HYSTERESIS_OFS)&IOMUX_PA_8_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_8_SEL_OFS)&IOMUX_PA_8_SEL_MASK) + ((input_val<<IOMUX_PA_8_INPUT_VAL_OFS)&IOMUX_PA_8_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_9_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_9.packed_w =  + ((output_en<<IOMUX_PA_9_OUTPUT_EN_OFS)&IOMUX_PA_9_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_9_INPUT_EN_OFS)&IOMUX_PA_9_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_9_DRIVE_STRENGTH_OFS)&IOMUX_PA_9_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_9_SLEW_RATE_OFS)&IOMUX_PA_9_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_9_PULL_UP_OFS)&IOMUX_PA_9_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_9_PULL_DOWN_OFS)&IOMUX_PA_9_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_9_HYSTERESIS_OFS)&IOMUX_PA_9_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_9_SEL_OFS)&IOMUX_PA_9_SEL_MASK) + ((input_val<<IOMUX_PA_9_INPUT_VAL_OFS)&IOMUX_PA_9_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_10_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_10.packed_w =  + ((output_en<<IOMUX_PA_10_OUTPUT_EN_OFS)&IOMUX_PA_10_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_10_INPUT_EN_OFS)&IOMUX_PA_10_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_10_DRIVE_STRENGTH_OFS)&IOMUX_PA_10_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_10_SLEW_RATE_OFS)&IOMUX_PA_10_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_10_PULL_UP_OFS)&IOMUX_PA_10_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_10_PULL_DOWN_OFS)&IOMUX_PA_10_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_10_HYSTERESIS_OFS)&IOMUX_PA_10_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_10_SEL_OFS)&IOMUX_PA_10_SEL_MASK) + ((input_val<<IOMUX_PA_10_INPUT_VAL_OFS)&IOMUX_PA_10_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_11_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_11.packed_w =  + ((output_en<<IOMUX_PA_11_OUTPUT_EN_OFS)&IOMUX_PA_11_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_11_INPUT_EN_OFS)&IOMUX_PA_11_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_11_DRIVE_STRENGTH_OFS)&IOMUX_PA_11_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_11_SLEW_RATE_OFS)&IOMUX_PA_11_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_11_PULL_UP_OFS)&IOMUX_PA_11_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_11_PULL_DOWN_OFS)&IOMUX_PA_11_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_11_HYSTERESIS_OFS)&IOMUX_PA_11_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_11_SEL_OFS)&IOMUX_PA_11_SEL_MASK) + ((input_val<<IOMUX_PA_11_INPUT_VAL_OFS)&IOMUX_PA_11_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_12_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_12.packed_w =  + ((output_en<<IOMUX_PA_12_OUTPUT_EN_OFS)&IOMUX_PA_12_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_12_INPUT_EN_OFS)&IOMUX_PA_12_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_12_DRIVE_STRENGTH_OFS)&IOMUX_PA_12_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_12_SLEW_RATE_OFS)&IOMUX_PA_12_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_12_PULL_UP_OFS)&IOMUX_PA_12_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_12_PULL_DOWN_OFS)&IOMUX_PA_12_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_12_HYSTERESIS_OFS)&IOMUX_PA_12_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_12_SEL_OFS)&IOMUX_PA_12_SEL_MASK) + ((input_val<<IOMUX_PA_12_INPUT_VAL_OFS)&IOMUX_PA_12_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_13_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_13.packed_w =  + ((output_en<<IOMUX_PA_13_OUTPUT_EN_OFS)&IOMUX_PA_13_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_13_INPUT_EN_OFS)&IOMUX_PA_13_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_13_DRIVE_STRENGTH_OFS)&IOMUX_PA_13_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_13_SLEW_RATE_OFS)&IOMUX_PA_13_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_13_PULL_UP_OFS)&IOMUX_PA_13_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_13_PULL_DOWN_OFS)&IOMUX_PA_13_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_13_HYSTERESIS_OFS)&IOMUX_PA_13_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_13_SEL_OFS)&IOMUX_PA_13_SEL_MASK) + ((input_val<<IOMUX_PA_13_INPUT_VAL_OFS)&IOMUX_PA_13_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_14_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_14.packed_w =  + ((output_en<<IOMUX_PA_14_OUTPUT_EN_OFS)&IOMUX_PA_14_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_14_INPUT_EN_OFS)&IOMUX_PA_14_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_14_DRIVE_STRENGTH_OFS)&IOMUX_PA_14_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_14_SLEW_RATE_OFS)&IOMUX_PA_14_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_14_PULL_UP_OFS)&IOMUX_PA_14_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_14_PULL_DOWN_OFS)&IOMUX_PA_14_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_14_HYSTERESIS_OFS)&IOMUX_PA_14_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_14_SEL_OFS)&IOMUX_PA_14_SEL_MASK) + ((input_val<<IOMUX_PA_14_INPUT_VAL_OFS)&IOMUX_PA_14_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_15_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_15.packed_w =  + ((output_en<<IOMUX_PA_15_OUTPUT_EN_OFS)&IOMUX_PA_15_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_15_INPUT_EN_OFS)&IOMUX_PA_15_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_15_DRIVE_STRENGTH_OFS)&IOMUX_PA_15_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_15_SLEW_RATE_OFS)&IOMUX_PA_15_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_15_PULL_UP_OFS)&IOMUX_PA_15_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_15_PULL_DOWN_OFS)&IOMUX_PA_15_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_15_HYSTERESIS_OFS)&IOMUX_PA_15_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_15_SEL_OFS)&IOMUX_PA_15_SEL_MASK) + ((input_val<<IOMUX_PA_15_INPUT_VAL_OFS)&IOMUX_PA_15_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_16_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_16.packed_w =  + ((output_en<<IOMUX_PA_16_OUTPUT_EN_OFS)&IOMUX_PA_16_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_16_INPUT_EN_OFS)&IOMUX_PA_16_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_16_DRIVE_STRENGTH_OFS)&IOMUX_PA_16_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_16_SLEW_RATE_OFS)&IOMUX_PA_16_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_16_PULL_UP_OFS)&IOMUX_PA_16_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_16_PULL_DOWN_OFS)&IOMUX_PA_16_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_16_HYSTERESIS_OFS)&IOMUX_PA_16_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_16_SEL_OFS)&IOMUX_PA_16_SEL_MASK) + ((input_val<<IOMUX_PA_16_INPUT_VAL_OFS)&IOMUX_PA_16_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_17_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_17.packed_w =  + ((output_en<<IOMUX_PA_17_OUTPUT_EN_OFS)&IOMUX_PA_17_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_17_INPUT_EN_OFS)&IOMUX_PA_17_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_17_DRIVE_STRENGTH_OFS)&IOMUX_PA_17_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_17_SLEW_RATE_OFS)&IOMUX_PA_17_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_17_PULL_UP_OFS)&IOMUX_PA_17_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_17_PULL_DOWN_OFS)&IOMUX_PA_17_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_17_HYSTERESIS_OFS)&IOMUX_PA_17_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_17_SEL_OFS)&IOMUX_PA_17_SEL_MASK) + ((input_val<<IOMUX_PA_17_INPUT_VAL_OFS)&IOMUX_PA_17_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_18_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_18.packed_w =  + ((output_en<<IOMUX_PA_18_OUTPUT_EN_OFS)&IOMUX_PA_18_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_18_INPUT_EN_OFS)&IOMUX_PA_18_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_18_DRIVE_STRENGTH_OFS)&IOMUX_PA_18_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_18_SLEW_RATE_OFS)&IOMUX_PA_18_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_18_PULL_UP_OFS)&IOMUX_PA_18_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_18_PULL_DOWN_OFS)&IOMUX_PA_18_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_18_HYSTERESIS_OFS)&IOMUX_PA_18_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_18_SEL_OFS)&IOMUX_PA_18_SEL_MASK) + ((input_val<<IOMUX_PA_18_INPUT_VAL_OFS)&IOMUX_PA_18_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_19_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_19.packed_w =  + ((output_en<<IOMUX_PA_19_OUTPUT_EN_OFS)&IOMUX_PA_19_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_19_INPUT_EN_OFS)&IOMUX_PA_19_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_19_DRIVE_STRENGTH_OFS)&IOMUX_PA_19_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_19_SLEW_RATE_OFS)&IOMUX_PA_19_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_19_PULL_UP_OFS)&IOMUX_PA_19_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_19_PULL_DOWN_OFS)&IOMUX_PA_19_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_19_HYSTERESIS_OFS)&IOMUX_PA_19_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_19_SEL_OFS)&IOMUX_PA_19_SEL_MASK) + ((input_val<<IOMUX_PA_19_INPUT_VAL_OFS)&IOMUX_PA_19_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_20_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_20.packed_w =  + ((output_en<<IOMUX_PA_20_OUTPUT_EN_OFS)&IOMUX_PA_20_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_20_INPUT_EN_OFS)&IOMUX_PA_20_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_20_DRIVE_STRENGTH_OFS)&IOMUX_PA_20_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_20_SLEW_RATE_OFS)&IOMUX_PA_20_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_20_PULL_UP_OFS)&IOMUX_PA_20_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_20_PULL_DOWN_OFS)&IOMUX_PA_20_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_20_HYSTERESIS_OFS)&IOMUX_PA_20_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_20_SEL_OFS)&IOMUX_PA_20_SEL_MASK) + ((input_val<<IOMUX_PA_20_INPUT_VAL_OFS)&IOMUX_PA_20_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_21_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_21.packed_w =  + ((output_en<<IOMUX_PA_21_OUTPUT_EN_OFS)&IOMUX_PA_21_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_21_INPUT_EN_OFS)&IOMUX_PA_21_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_21_DRIVE_STRENGTH_OFS)&IOMUX_PA_21_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_21_SLEW_RATE_OFS)&IOMUX_PA_21_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_21_PULL_UP_OFS)&IOMUX_PA_21_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_21_PULL_DOWN_OFS)&IOMUX_PA_21_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_21_HYSTERESIS_OFS)&IOMUX_PA_21_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_21_SEL_OFS)&IOMUX_PA_21_SEL_MASK) + ((input_val<<IOMUX_PA_21_INPUT_VAL_OFS)&IOMUX_PA_21_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_22_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_22.packed_w =  + ((output_en<<IOMUX_PA_22_OUTPUT_EN_OFS)&IOMUX_PA_22_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_22_INPUT_EN_OFS)&IOMUX_PA_22_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_22_DRIVE_STRENGTH_OFS)&IOMUX_PA_22_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_22_SLEW_RATE_OFS)&IOMUX_PA_22_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_22_PULL_UP_OFS)&IOMUX_PA_22_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_22_PULL_DOWN_OFS)&IOMUX_PA_22_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_22_HYSTERESIS_OFS)&IOMUX_PA_22_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_22_SEL_OFS)&IOMUX_PA_22_SEL_MASK) + ((input_val<<IOMUX_PA_22_INPUT_VAL_OFS)&IOMUX_PA_22_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_23_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_23.packed_w =  + ((output_en<<IOMUX_PA_23_OUTPUT_EN_OFS)&IOMUX_PA_23_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_23_INPUT_EN_OFS)&IOMUX_PA_23_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_23_DRIVE_STRENGTH_OFS)&IOMUX_PA_23_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_23_SLEW_RATE_OFS)&IOMUX_PA_23_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_23_PULL_UP_OFS)&IOMUX_PA_23_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_23_PULL_DOWN_OFS)&IOMUX_PA_23_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_23_HYSTERESIS_OFS)&IOMUX_PA_23_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_23_SEL_OFS)&IOMUX_PA_23_SEL_MASK) + ((input_val<<IOMUX_PA_23_INPUT_VAL_OFS)&IOMUX_PA_23_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_24_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_24.packed_w =  + ((output_en<<IOMUX_PA_24_OUTPUT_EN_OFS)&IOMUX_PA_24_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_24_INPUT_EN_OFS)&IOMUX_PA_24_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_24_DRIVE_STRENGTH_OFS)&IOMUX_PA_24_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_24_SLEW_RATE_OFS)&IOMUX_PA_24_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_24_PULL_UP_OFS)&IOMUX_PA_24_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_24_PULL_DOWN_OFS)&IOMUX_PA_24_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_24_HYSTERESIS_OFS)&IOMUX_PA_24_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_24_SEL_OFS)&IOMUX_PA_24_SEL_MASK) + ((input_val<<IOMUX_PA_24_INPUT_VAL_OFS)&IOMUX_PA_24_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_25_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_25.packed_w =  + ((output_en<<IOMUX_PA_25_OUTPUT_EN_OFS)&IOMUX_PA_25_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_25_INPUT_EN_OFS)&IOMUX_PA_25_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_25_DRIVE_STRENGTH_OFS)&IOMUX_PA_25_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_25_SLEW_RATE_OFS)&IOMUX_PA_25_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_25_PULL_UP_OFS)&IOMUX_PA_25_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_25_PULL_DOWN_OFS)&IOMUX_PA_25_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_25_HYSTERESIS_OFS)&IOMUX_PA_25_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_25_SEL_OFS)&IOMUX_PA_25_SEL_MASK) + ((input_val<<IOMUX_PA_25_INPUT_VAL_OFS)&IOMUX_PA_25_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_26_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_26.packed_w =  + ((output_en<<IOMUX_PA_26_OUTPUT_EN_OFS)&IOMUX_PA_26_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_26_INPUT_EN_OFS)&IOMUX_PA_26_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_26_DRIVE_STRENGTH_OFS)&IOMUX_PA_26_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_26_SLEW_RATE_OFS)&IOMUX_PA_26_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_26_PULL_UP_OFS)&IOMUX_PA_26_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_26_PULL_DOWN_OFS)&IOMUX_PA_26_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_26_HYSTERESIS_OFS)&IOMUX_PA_26_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_26_SEL_OFS)&IOMUX_PA_26_SEL_MASK) + ((input_val<<IOMUX_PA_26_INPUT_VAL_OFS)&IOMUX_PA_26_INPUT_VAL_MASK);
}

static inline void IOMUX_PA_27_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_27.packed_w =  + ((output_en<<IOMUX_PA_27_OUTPUT_EN_OFS)&IOMUX_PA_27_OUTPUT_EN_MASK) + ((input_en<<IOMUX_PA_27_INPUT_EN_OFS)&IOMUX_PA_27_INPUT_EN_MASK) + ((drive_strength<<IOMUX_PA_27_DRIVE_STRENGTH_OFS)&IOMUX_PA_27_DRIVE_STRENGTH_MASK) + ((slew_rate<<IOMUX_PA_27_SLEW_RATE_OFS)&IOMUX_PA_27_SLEW_RATE_MASK) + ((pull_up<<IOMUX_PA_27_PULL_UP_OFS)&IOMUX_PA_27_PULL_UP_MASK) + ((pull_down<<IOMUX_PA_27_PULL_DOWN_OFS)&IOMUX_PA_27_PULL_DOWN_MASK) + ((hysteresis<<IOMUX_PA_27_HYSTERESIS_OFS)&IOMUX_PA_27_HYSTERESIS_MASK) + ((sel<<IOMUX_PA_27_SEL_OFS)&IOMUX_PA_27_SEL_MASK) + ((input_val<<IOMUX_PA_27_INPUT_VAL_OFS)&IOMUX_PA_27_INPUT_VAL_MASK);
}

static inline void IOMUX_DUMMY_WRITE(IOMUX_REGS_s * registers, uint32_t dummy) {
    registers->DUMMY.packed_w =  + ((dummy<<IOMUX_DUMMY_DUMMY_OFS)&IOMUX_DUMMY_DUMMY_MASK);
}

