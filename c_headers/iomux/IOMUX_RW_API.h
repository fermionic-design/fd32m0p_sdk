#include "IOMUX_REGS.h"

static inline void IOMUX_PA_0_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_0.packed_w =  + ((output_en<<IOMUX_PA_0_output_en_OFS)&IOMUX_PA_0_output_en_MASK) + ((input_en<<IOMUX_PA_0_input_en_OFS)&IOMUX_PA_0_input_en_MASK) + ((drive_strength<<IOMUX_PA_0_drive_strength_OFS)&IOMUX_PA_0_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_0_slew_rate_OFS)&IOMUX_PA_0_slew_rate_MASK) + ((pull_up<<IOMUX_PA_0_pull_up_OFS)&IOMUX_PA_0_pull_up_MASK) + ((pull_down<<IOMUX_PA_0_pull_down_OFS)&IOMUX_PA_0_pull_down_MASK) + ((hysteresis<<IOMUX_PA_0_hysteresis_OFS)&IOMUX_PA_0_hysteresis_MASK) + ((sel<<IOMUX_PA_0_sel_OFS)&IOMUX_PA_0_sel_MASK) + ((input_val<<IOMUX_PA_0_input_val_OFS)&IOMUX_PA_0_input_val_MASK);
}

static inline void IOMUX_PA_1_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_1.packed_w =  + ((output_en<<IOMUX_PA_1_output_en_OFS)&IOMUX_PA_1_output_en_MASK) + ((input_en<<IOMUX_PA_1_input_en_OFS)&IOMUX_PA_1_input_en_MASK) + ((drive_strength<<IOMUX_PA_1_drive_strength_OFS)&IOMUX_PA_1_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_1_slew_rate_OFS)&IOMUX_PA_1_slew_rate_MASK) + ((pull_up<<IOMUX_PA_1_pull_up_OFS)&IOMUX_PA_1_pull_up_MASK) + ((pull_down<<IOMUX_PA_1_pull_down_OFS)&IOMUX_PA_1_pull_down_MASK) + ((hysteresis<<IOMUX_PA_1_hysteresis_OFS)&IOMUX_PA_1_hysteresis_MASK) + ((sel<<IOMUX_PA_1_sel_OFS)&IOMUX_PA_1_sel_MASK) + ((input_val<<IOMUX_PA_1_input_val_OFS)&IOMUX_PA_1_input_val_MASK);
}

static inline void IOMUX_PA_2_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_2.packed_w =  + ((output_en<<IOMUX_PA_2_output_en_OFS)&IOMUX_PA_2_output_en_MASK) + ((input_en<<IOMUX_PA_2_input_en_OFS)&IOMUX_PA_2_input_en_MASK) + ((drive_strength<<IOMUX_PA_2_drive_strength_OFS)&IOMUX_PA_2_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_2_slew_rate_OFS)&IOMUX_PA_2_slew_rate_MASK) + ((pull_up<<IOMUX_PA_2_pull_up_OFS)&IOMUX_PA_2_pull_up_MASK) + ((pull_down<<IOMUX_PA_2_pull_down_OFS)&IOMUX_PA_2_pull_down_MASK) + ((hysteresis<<IOMUX_PA_2_hysteresis_OFS)&IOMUX_PA_2_hysteresis_MASK) + ((sel<<IOMUX_PA_2_sel_OFS)&IOMUX_PA_2_sel_MASK) + ((input_val<<IOMUX_PA_2_input_val_OFS)&IOMUX_PA_2_input_val_MASK);
}

static inline void IOMUX_PA_3_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_3.packed_w =  + ((output_en<<IOMUX_PA_3_output_en_OFS)&IOMUX_PA_3_output_en_MASK) + ((input_en<<IOMUX_PA_3_input_en_OFS)&IOMUX_PA_3_input_en_MASK) + ((drive_strength<<IOMUX_PA_3_drive_strength_OFS)&IOMUX_PA_3_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_3_slew_rate_OFS)&IOMUX_PA_3_slew_rate_MASK) + ((pull_up<<IOMUX_PA_3_pull_up_OFS)&IOMUX_PA_3_pull_up_MASK) + ((pull_down<<IOMUX_PA_3_pull_down_OFS)&IOMUX_PA_3_pull_down_MASK) + ((hysteresis<<IOMUX_PA_3_hysteresis_OFS)&IOMUX_PA_3_hysteresis_MASK) + ((sel<<IOMUX_PA_3_sel_OFS)&IOMUX_PA_3_sel_MASK) + ((input_val<<IOMUX_PA_3_input_val_OFS)&IOMUX_PA_3_input_val_MASK);
}

static inline void IOMUX_PA_4_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_4.packed_w =  + ((output_en<<IOMUX_PA_4_output_en_OFS)&IOMUX_PA_4_output_en_MASK) + ((input_en<<IOMUX_PA_4_input_en_OFS)&IOMUX_PA_4_input_en_MASK) + ((drive_strength<<IOMUX_PA_4_drive_strength_OFS)&IOMUX_PA_4_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_4_slew_rate_OFS)&IOMUX_PA_4_slew_rate_MASK) + ((pull_up<<IOMUX_PA_4_pull_up_OFS)&IOMUX_PA_4_pull_up_MASK) + ((pull_down<<IOMUX_PA_4_pull_down_OFS)&IOMUX_PA_4_pull_down_MASK) + ((hysteresis<<IOMUX_PA_4_hysteresis_OFS)&IOMUX_PA_4_hysteresis_MASK) + ((sel<<IOMUX_PA_4_sel_OFS)&IOMUX_PA_4_sel_MASK) + ((input_val<<IOMUX_PA_4_input_val_OFS)&IOMUX_PA_4_input_val_MASK);
}

static inline void IOMUX_PA_5_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_5.packed_w =  + ((output_en<<IOMUX_PA_5_output_en_OFS)&IOMUX_PA_5_output_en_MASK) + ((input_en<<IOMUX_PA_5_input_en_OFS)&IOMUX_PA_5_input_en_MASK) + ((drive_strength<<IOMUX_PA_5_drive_strength_OFS)&IOMUX_PA_5_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_5_slew_rate_OFS)&IOMUX_PA_5_slew_rate_MASK) + ((pull_up<<IOMUX_PA_5_pull_up_OFS)&IOMUX_PA_5_pull_up_MASK) + ((pull_down<<IOMUX_PA_5_pull_down_OFS)&IOMUX_PA_5_pull_down_MASK) + ((hysteresis<<IOMUX_PA_5_hysteresis_OFS)&IOMUX_PA_5_hysteresis_MASK) + ((sel<<IOMUX_PA_5_sel_OFS)&IOMUX_PA_5_sel_MASK) + ((input_val<<IOMUX_PA_5_input_val_OFS)&IOMUX_PA_5_input_val_MASK);
}

static inline void IOMUX_PA_6_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_6.packed_w =  + ((output_en<<IOMUX_PA_6_output_en_OFS)&IOMUX_PA_6_output_en_MASK) + ((input_en<<IOMUX_PA_6_input_en_OFS)&IOMUX_PA_6_input_en_MASK) + ((drive_strength<<IOMUX_PA_6_drive_strength_OFS)&IOMUX_PA_6_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_6_slew_rate_OFS)&IOMUX_PA_6_slew_rate_MASK) + ((pull_up<<IOMUX_PA_6_pull_up_OFS)&IOMUX_PA_6_pull_up_MASK) + ((pull_down<<IOMUX_PA_6_pull_down_OFS)&IOMUX_PA_6_pull_down_MASK) + ((hysteresis<<IOMUX_PA_6_hysteresis_OFS)&IOMUX_PA_6_hysteresis_MASK) + ((sel<<IOMUX_PA_6_sel_OFS)&IOMUX_PA_6_sel_MASK) + ((input_val<<IOMUX_PA_6_input_val_OFS)&IOMUX_PA_6_input_val_MASK);
}

static inline void IOMUX_PA_7_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_7.packed_w =  + ((output_en<<IOMUX_PA_7_output_en_OFS)&IOMUX_PA_7_output_en_MASK) + ((input_en<<IOMUX_PA_7_input_en_OFS)&IOMUX_PA_7_input_en_MASK) + ((drive_strength<<IOMUX_PA_7_drive_strength_OFS)&IOMUX_PA_7_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_7_slew_rate_OFS)&IOMUX_PA_7_slew_rate_MASK) + ((pull_up<<IOMUX_PA_7_pull_up_OFS)&IOMUX_PA_7_pull_up_MASK) + ((pull_down<<IOMUX_PA_7_pull_down_OFS)&IOMUX_PA_7_pull_down_MASK) + ((hysteresis<<IOMUX_PA_7_hysteresis_OFS)&IOMUX_PA_7_hysteresis_MASK) + ((sel<<IOMUX_PA_7_sel_OFS)&IOMUX_PA_7_sel_MASK) + ((input_val<<IOMUX_PA_7_input_val_OFS)&IOMUX_PA_7_input_val_MASK);
}

static inline void IOMUX_PA_8_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_8.packed_w =  + ((output_en<<IOMUX_PA_8_output_en_OFS)&IOMUX_PA_8_output_en_MASK) + ((input_en<<IOMUX_PA_8_input_en_OFS)&IOMUX_PA_8_input_en_MASK) + ((drive_strength<<IOMUX_PA_8_drive_strength_OFS)&IOMUX_PA_8_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_8_slew_rate_OFS)&IOMUX_PA_8_slew_rate_MASK) + ((pull_up<<IOMUX_PA_8_pull_up_OFS)&IOMUX_PA_8_pull_up_MASK) + ((pull_down<<IOMUX_PA_8_pull_down_OFS)&IOMUX_PA_8_pull_down_MASK) + ((hysteresis<<IOMUX_PA_8_hysteresis_OFS)&IOMUX_PA_8_hysteresis_MASK) + ((sel<<IOMUX_PA_8_sel_OFS)&IOMUX_PA_8_sel_MASK) + ((input_val<<IOMUX_PA_8_input_val_OFS)&IOMUX_PA_8_input_val_MASK);
}

static inline void IOMUX_PA_9_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_9.packed_w =  + ((output_en<<IOMUX_PA_9_output_en_OFS)&IOMUX_PA_9_output_en_MASK) + ((input_en<<IOMUX_PA_9_input_en_OFS)&IOMUX_PA_9_input_en_MASK) + ((drive_strength<<IOMUX_PA_9_drive_strength_OFS)&IOMUX_PA_9_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_9_slew_rate_OFS)&IOMUX_PA_9_slew_rate_MASK) + ((pull_up<<IOMUX_PA_9_pull_up_OFS)&IOMUX_PA_9_pull_up_MASK) + ((pull_down<<IOMUX_PA_9_pull_down_OFS)&IOMUX_PA_9_pull_down_MASK) + ((hysteresis<<IOMUX_PA_9_hysteresis_OFS)&IOMUX_PA_9_hysteresis_MASK) + ((sel<<IOMUX_PA_9_sel_OFS)&IOMUX_PA_9_sel_MASK) + ((input_val<<IOMUX_PA_9_input_val_OFS)&IOMUX_PA_9_input_val_MASK);
}

static inline void IOMUX_PA_10_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_10.packed_w =  + ((output_en<<IOMUX_PA_10_output_en_OFS)&IOMUX_PA_10_output_en_MASK) + ((input_en<<IOMUX_PA_10_input_en_OFS)&IOMUX_PA_10_input_en_MASK) + ((drive_strength<<IOMUX_PA_10_drive_strength_OFS)&IOMUX_PA_10_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_10_slew_rate_OFS)&IOMUX_PA_10_slew_rate_MASK) + ((pull_up<<IOMUX_PA_10_pull_up_OFS)&IOMUX_PA_10_pull_up_MASK) + ((pull_down<<IOMUX_PA_10_pull_down_OFS)&IOMUX_PA_10_pull_down_MASK) + ((hysteresis<<IOMUX_PA_10_hysteresis_OFS)&IOMUX_PA_10_hysteresis_MASK) + ((sel<<IOMUX_PA_10_sel_OFS)&IOMUX_PA_10_sel_MASK) + ((input_val<<IOMUX_PA_10_input_val_OFS)&IOMUX_PA_10_input_val_MASK);
}

static inline void IOMUX_PA_11_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_11.packed_w =  + ((output_en<<IOMUX_PA_11_output_en_OFS)&IOMUX_PA_11_output_en_MASK) + ((input_en<<IOMUX_PA_11_input_en_OFS)&IOMUX_PA_11_input_en_MASK) + ((drive_strength<<IOMUX_PA_11_drive_strength_OFS)&IOMUX_PA_11_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_11_slew_rate_OFS)&IOMUX_PA_11_slew_rate_MASK) + ((pull_up<<IOMUX_PA_11_pull_up_OFS)&IOMUX_PA_11_pull_up_MASK) + ((pull_down<<IOMUX_PA_11_pull_down_OFS)&IOMUX_PA_11_pull_down_MASK) + ((hysteresis<<IOMUX_PA_11_hysteresis_OFS)&IOMUX_PA_11_hysteresis_MASK) + ((sel<<IOMUX_PA_11_sel_OFS)&IOMUX_PA_11_sel_MASK) + ((input_val<<IOMUX_PA_11_input_val_OFS)&IOMUX_PA_11_input_val_MASK);
}

static inline void IOMUX_PA_12_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_12.packed_w =  + ((output_en<<IOMUX_PA_12_output_en_OFS)&IOMUX_PA_12_output_en_MASK) + ((input_en<<IOMUX_PA_12_input_en_OFS)&IOMUX_PA_12_input_en_MASK) + ((drive_strength<<IOMUX_PA_12_drive_strength_OFS)&IOMUX_PA_12_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_12_slew_rate_OFS)&IOMUX_PA_12_slew_rate_MASK) + ((pull_up<<IOMUX_PA_12_pull_up_OFS)&IOMUX_PA_12_pull_up_MASK) + ((pull_down<<IOMUX_PA_12_pull_down_OFS)&IOMUX_PA_12_pull_down_MASK) + ((hysteresis<<IOMUX_PA_12_hysteresis_OFS)&IOMUX_PA_12_hysteresis_MASK) + ((sel<<IOMUX_PA_12_sel_OFS)&IOMUX_PA_12_sel_MASK) + ((input_val<<IOMUX_PA_12_input_val_OFS)&IOMUX_PA_12_input_val_MASK);
}

static inline void IOMUX_PA_13_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_13.packed_w =  + ((output_en<<IOMUX_PA_13_output_en_OFS)&IOMUX_PA_13_output_en_MASK) + ((input_en<<IOMUX_PA_13_input_en_OFS)&IOMUX_PA_13_input_en_MASK) + ((drive_strength<<IOMUX_PA_13_drive_strength_OFS)&IOMUX_PA_13_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_13_slew_rate_OFS)&IOMUX_PA_13_slew_rate_MASK) + ((pull_up<<IOMUX_PA_13_pull_up_OFS)&IOMUX_PA_13_pull_up_MASK) + ((pull_down<<IOMUX_PA_13_pull_down_OFS)&IOMUX_PA_13_pull_down_MASK) + ((hysteresis<<IOMUX_PA_13_hysteresis_OFS)&IOMUX_PA_13_hysteresis_MASK) + ((sel<<IOMUX_PA_13_sel_OFS)&IOMUX_PA_13_sel_MASK) + ((input_val<<IOMUX_PA_13_input_val_OFS)&IOMUX_PA_13_input_val_MASK);
}

static inline void IOMUX_PA_14_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_14.packed_w =  + ((output_en<<IOMUX_PA_14_output_en_OFS)&IOMUX_PA_14_output_en_MASK) + ((input_en<<IOMUX_PA_14_input_en_OFS)&IOMUX_PA_14_input_en_MASK) + ((drive_strength<<IOMUX_PA_14_drive_strength_OFS)&IOMUX_PA_14_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_14_slew_rate_OFS)&IOMUX_PA_14_slew_rate_MASK) + ((pull_up<<IOMUX_PA_14_pull_up_OFS)&IOMUX_PA_14_pull_up_MASK) + ((pull_down<<IOMUX_PA_14_pull_down_OFS)&IOMUX_PA_14_pull_down_MASK) + ((hysteresis<<IOMUX_PA_14_hysteresis_OFS)&IOMUX_PA_14_hysteresis_MASK) + ((sel<<IOMUX_PA_14_sel_OFS)&IOMUX_PA_14_sel_MASK) + ((input_val<<IOMUX_PA_14_input_val_OFS)&IOMUX_PA_14_input_val_MASK);
}

static inline void IOMUX_PA_15_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_15.packed_w =  + ((output_en<<IOMUX_PA_15_output_en_OFS)&IOMUX_PA_15_output_en_MASK) + ((input_en<<IOMUX_PA_15_input_en_OFS)&IOMUX_PA_15_input_en_MASK) + ((drive_strength<<IOMUX_PA_15_drive_strength_OFS)&IOMUX_PA_15_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_15_slew_rate_OFS)&IOMUX_PA_15_slew_rate_MASK) + ((pull_up<<IOMUX_PA_15_pull_up_OFS)&IOMUX_PA_15_pull_up_MASK) + ((pull_down<<IOMUX_PA_15_pull_down_OFS)&IOMUX_PA_15_pull_down_MASK) + ((hysteresis<<IOMUX_PA_15_hysteresis_OFS)&IOMUX_PA_15_hysteresis_MASK) + ((sel<<IOMUX_PA_15_sel_OFS)&IOMUX_PA_15_sel_MASK) + ((input_val<<IOMUX_PA_15_input_val_OFS)&IOMUX_PA_15_input_val_MASK);
}

static inline void IOMUX_PA_16_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_16.packed_w =  + ((output_en<<IOMUX_PA_16_output_en_OFS)&IOMUX_PA_16_output_en_MASK) + ((input_en<<IOMUX_PA_16_input_en_OFS)&IOMUX_PA_16_input_en_MASK) + ((drive_strength<<IOMUX_PA_16_drive_strength_OFS)&IOMUX_PA_16_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_16_slew_rate_OFS)&IOMUX_PA_16_slew_rate_MASK) + ((pull_up<<IOMUX_PA_16_pull_up_OFS)&IOMUX_PA_16_pull_up_MASK) + ((pull_down<<IOMUX_PA_16_pull_down_OFS)&IOMUX_PA_16_pull_down_MASK) + ((hysteresis<<IOMUX_PA_16_hysteresis_OFS)&IOMUX_PA_16_hysteresis_MASK) + ((sel<<IOMUX_PA_16_sel_OFS)&IOMUX_PA_16_sel_MASK) + ((input_val<<IOMUX_PA_16_input_val_OFS)&IOMUX_PA_16_input_val_MASK);
}

static inline void IOMUX_PA_17_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_17.packed_w =  + ((output_en<<IOMUX_PA_17_output_en_OFS)&IOMUX_PA_17_output_en_MASK) + ((input_en<<IOMUX_PA_17_input_en_OFS)&IOMUX_PA_17_input_en_MASK) + ((drive_strength<<IOMUX_PA_17_drive_strength_OFS)&IOMUX_PA_17_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_17_slew_rate_OFS)&IOMUX_PA_17_slew_rate_MASK) + ((pull_up<<IOMUX_PA_17_pull_up_OFS)&IOMUX_PA_17_pull_up_MASK) + ((pull_down<<IOMUX_PA_17_pull_down_OFS)&IOMUX_PA_17_pull_down_MASK) + ((hysteresis<<IOMUX_PA_17_hysteresis_OFS)&IOMUX_PA_17_hysteresis_MASK) + ((sel<<IOMUX_PA_17_sel_OFS)&IOMUX_PA_17_sel_MASK) + ((input_val<<IOMUX_PA_17_input_val_OFS)&IOMUX_PA_17_input_val_MASK);
}

static inline void IOMUX_PA_18_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_18.packed_w =  + ((output_en<<IOMUX_PA_18_output_en_OFS)&IOMUX_PA_18_output_en_MASK) + ((input_en<<IOMUX_PA_18_input_en_OFS)&IOMUX_PA_18_input_en_MASK) + ((drive_strength<<IOMUX_PA_18_drive_strength_OFS)&IOMUX_PA_18_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_18_slew_rate_OFS)&IOMUX_PA_18_slew_rate_MASK) + ((pull_up<<IOMUX_PA_18_pull_up_OFS)&IOMUX_PA_18_pull_up_MASK) + ((pull_down<<IOMUX_PA_18_pull_down_OFS)&IOMUX_PA_18_pull_down_MASK) + ((hysteresis<<IOMUX_PA_18_hysteresis_OFS)&IOMUX_PA_18_hysteresis_MASK) + ((sel<<IOMUX_PA_18_sel_OFS)&IOMUX_PA_18_sel_MASK) + ((input_val<<IOMUX_PA_18_input_val_OFS)&IOMUX_PA_18_input_val_MASK);
}

static inline void IOMUX_PA_19_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_19.packed_w =  + ((output_en<<IOMUX_PA_19_output_en_OFS)&IOMUX_PA_19_output_en_MASK) + ((input_en<<IOMUX_PA_19_input_en_OFS)&IOMUX_PA_19_input_en_MASK) + ((drive_strength<<IOMUX_PA_19_drive_strength_OFS)&IOMUX_PA_19_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_19_slew_rate_OFS)&IOMUX_PA_19_slew_rate_MASK) + ((pull_up<<IOMUX_PA_19_pull_up_OFS)&IOMUX_PA_19_pull_up_MASK) + ((pull_down<<IOMUX_PA_19_pull_down_OFS)&IOMUX_PA_19_pull_down_MASK) + ((hysteresis<<IOMUX_PA_19_hysteresis_OFS)&IOMUX_PA_19_hysteresis_MASK) + ((sel<<IOMUX_PA_19_sel_OFS)&IOMUX_PA_19_sel_MASK) + ((input_val<<IOMUX_PA_19_input_val_OFS)&IOMUX_PA_19_input_val_MASK);
}

static inline void IOMUX_PA_20_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_20.packed_w =  + ((output_en<<IOMUX_PA_20_output_en_OFS)&IOMUX_PA_20_output_en_MASK) + ((input_en<<IOMUX_PA_20_input_en_OFS)&IOMUX_PA_20_input_en_MASK) + ((drive_strength<<IOMUX_PA_20_drive_strength_OFS)&IOMUX_PA_20_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_20_slew_rate_OFS)&IOMUX_PA_20_slew_rate_MASK) + ((pull_up<<IOMUX_PA_20_pull_up_OFS)&IOMUX_PA_20_pull_up_MASK) + ((pull_down<<IOMUX_PA_20_pull_down_OFS)&IOMUX_PA_20_pull_down_MASK) + ((hysteresis<<IOMUX_PA_20_hysteresis_OFS)&IOMUX_PA_20_hysteresis_MASK) + ((sel<<IOMUX_PA_20_sel_OFS)&IOMUX_PA_20_sel_MASK) + ((input_val<<IOMUX_PA_20_input_val_OFS)&IOMUX_PA_20_input_val_MASK);
}

static inline void IOMUX_PA_21_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_21.packed_w =  + ((output_en<<IOMUX_PA_21_output_en_OFS)&IOMUX_PA_21_output_en_MASK) + ((input_en<<IOMUX_PA_21_input_en_OFS)&IOMUX_PA_21_input_en_MASK) + ((drive_strength<<IOMUX_PA_21_drive_strength_OFS)&IOMUX_PA_21_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_21_slew_rate_OFS)&IOMUX_PA_21_slew_rate_MASK) + ((pull_up<<IOMUX_PA_21_pull_up_OFS)&IOMUX_PA_21_pull_up_MASK) + ((pull_down<<IOMUX_PA_21_pull_down_OFS)&IOMUX_PA_21_pull_down_MASK) + ((hysteresis<<IOMUX_PA_21_hysteresis_OFS)&IOMUX_PA_21_hysteresis_MASK) + ((sel<<IOMUX_PA_21_sel_OFS)&IOMUX_PA_21_sel_MASK) + ((input_val<<IOMUX_PA_21_input_val_OFS)&IOMUX_PA_21_input_val_MASK);
}

static inline void IOMUX_PA_22_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_22.packed_w =  + ((output_en<<IOMUX_PA_22_output_en_OFS)&IOMUX_PA_22_output_en_MASK) + ((input_en<<IOMUX_PA_22_input_en_OFS)&IOMUX_PA_22_input_en_MASK) + ((drive_strength<<IOMUX_PA_22_drive_strength_OFS)&IOMUX_PA_22_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_22_slew_rate_OFS)&IOMUX_PA_22_slew_rate_MASK) + ((pull_up<<IOMUX_PA_22_pull_up_OFS)&IOMUX_PA_22_pull_up_MASK) + ((pull_down<<IOMUX_PA_22_pull_down_OFS)&IOMUX_PA_22_pull_down_MASK) + ((hysteresis<<IOMUX_PA_22_hysteresis_OFS)&IOMUX_PA_22_hysteresis_MASK) + ((sel<<IOMUX_PA_22_sel_OFS)&IOMUX_PA_22_sel_MASK) + ((input_val<<IOMUX_PA_22_input_val_OFS)&IOMUX_PA_22_input_val_MASK);
}

static inline void IOMUX_PA_23_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_23.packed_w =  + ((output_en<<IOMUX_PA_23_output_en_OFS)&IOMUX_PA_23_output_en_MASK) + ((input_en<<IOMUX_PA_23_input_en_OFS)&IOMUX_PA_23_input_en_MASK) + ((drive_strength<<IOMUX_PA_23_drive_strength_OFS)&IOMUX_PA_23_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_23_slew_rate_OFS)&IOMUX_PA_23_slew_rate_MASK) + ((pull_up<<IOMUX_PA_23_pull_up_OFS)&IOMUX_PA_23_pull_up_MASK) + ((pull_down<<IOMUX_PA_23_pull_down_OFS)&IOMUX_PA_23_pull_down_MASK) + ((hysteresis<<IOMUX_PA_23_hysteresis_OFS)&IOMUX_PA_23_hysteresis_MASK) + ((sel<<IOMUX_PA_23_sel_OFS)&IOMUX_PA_23_sel_MASK) + ((input_val<<IOMUX_PA_23_input_val_OFS)&IOMUX_PA_23_input_val_MASK);
}

static inline void IOMUX_PA_24_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_24.packed_w =  + ((output_en<<IOMUX_PA_24_output_en_OFS)&IOMUX_PA_24_output_en_MASK) + ((input_en<<IOMUX_PA_24_input_en_OFS)&IOMUX_PA_24_input_en_MASK) + ((drive_strength<<IOMUX_PA_24_drive_strength_OFS)&IOMUX_PA_24_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_24_slew_rate_OFS)&IOMUX_PA_24_slew_rate_MASK) + ((pull_up<<IOMUX_PA_24_pull_up_OFS)&IOMUX_PA_24_pull_up_MASK) + ((pull_down<<IOMUX_PA_24_pull_down_OFS)&IOMUX_PA_24_pull_down_MASK) + ((hysteresis<<IOMUX_PA_24_hysteresis_OFS)&IOMUX_PA_24_hysteresis_MASK) + ((sel<<IOMUX_PA_24_sel_OFS)&IOMUX_PA_24_sel_MASK) + ((input_val<<IOMUX_PA_24_input_val_OFS)&IOMUX_PA_24_input_val_MASK);
}

static inline void IOMUX_PA_25_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_25.packed_w =  + ((output_en<<IOMUX_PA_25_output_en_OFS)&IOMUX_PA_25_output_en_MASK) + ((input_en<<IOMUX_PA_25_input_en_OFS)&IOMUX_PA_25_input_en_MASK) + ((drive_strength<<IOMUX_PA_25_drive_strength_OFS)&IOMUX_PA_25_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_25_slew_rate_OFS)&IOMUX_PA_25_slew_rate_MASK) + ((pull_up<<IOMUX_PA_25_pull_up_OFS)&IOMUX_PA_25_pull_up_MASK) + ((pull_down<<IOMUX_PA_25_pull_down_OFS)&IOMUX_PA_25_pull_down_MASK) + ((hysteresis<<IOMUX_PA_25_hysteresis_OFS)&IOMUX_PA_25_hysteresis_MASK) + ((sel<<IOMUX_PA_25_sel_OFS)&IOMUX_PA_25_sel_MASK) + ((input_val<<IOMUX_PA_25_input_val_OFS)&IOMUX_PA_25_input_val_MASK);
}

static inline void IOMUX_PA_26_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_26.packed_w =  + ((output_en<<IOMUX_PA_26_output_en_OFS)&IOMUX_PA_26_output_en_MASK) + ((input_en<<IOMUX_PA_26_input_en_OFS)&IOMUX_PA_26_input_en_MASK) + ((drive_strength<<IOMUX_PA_26_drive_strength_OFS)&IOMUX_PA_26_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_26_slew_rate_OFS)&IOMUX_PA_26_slew_rate_MASK) + ((pull_up<<IOMUX_PA_26_pull_up_OFS)&IOMUX_PA_26_pull_up_MASK) + ((pull_down<<IOMUX_PA_26_pull_down_OFS)&IOMUX_PA_26_pull_down_MASK) + ((hysteresis<<IOMUX_PA_26_hysteresis_OFS)&IOMUX_PA_26_hysteresis_MASK) + ((sel<<IOMUX_PA_26_sel_OFS)&IOMUX_PA_26_sel_MASK) + ((input_val<<IOMUX_PA_26_input_val_OFS)&IOMUX_PA_26_input_val_MASK);
}

static inline void IOMUX_PA_27_WRITE(IOMUX_REGS_s * registers, uint32_t output_en, uint32_t input_en, uint32_t drive_strength, uint32_t slew_rate, uint32_t pull_up, uint32_t pull_down, uint32_t hysteresis, uint32_t sel, uint32_t input_val) {
    registers->PA_27.packed_w =  + ((output_en<<IOMUX_PA_27_output_en_OFS)&IOMUX_PA_27_output_en_MASK) + ((input_en<<IOMUX_PA_27_input_en_OFS)&IOMUX_PA_27_input_en_MASK) + ((drive_strength<<IOMUX_PA_27_drive_strength_OFS)&IOMUX_PA_27_drive_strength_MASK) + ((slew_rate<<IOMUX_PA_27_slew_rate_OFS)&IOMUX_PA_27_slew_rate_MASK) + ((pull_up<<IOMUX_PA_27_pull_up_OFS)&IOMUX_PA_27_pull_up_MASK) + ((pull_down<<IOMUX_PA_27_pull_down_OFS)&IOMUX_PA_27_pull_down_MASK) + ((hysteresis<<IOMUX_PA_27_hysteresis_OFS)&IOMUX_PA_27_hysteresis_MASK) + ((sel<<IOMUX_PA_27_sel_OFS)&IOMUX_PA_27_sel_MASK) + ((input_val<<IOMUX_PA_27_input_val_OFS)&IOMUX_PA_27_input_val_MASK);
}

static inline void IOMUX_DUMMY_WRITE(IOMUX_REGS_s * registers, uint32_t dummy) {
    registers->DUMMY.packed_w =  + ((dummy<<IOMUX_DUMMY_dummy_OFS)&IOMUX_DUMMY_dummy_MASK);
}

