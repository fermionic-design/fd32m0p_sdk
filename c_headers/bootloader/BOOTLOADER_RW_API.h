#include "BOOTLOADER_REGS.h"

static inline void BOOTLOADER_BCR_CONFIG_ID_WRITE(BOOTLOADER_REGS_s * registers, uint32_t BCR_CONFIG_ID) {
    registers->BCR_CONFIG_ID.packed_w =  + ((BCR_CONFIG_ID<<BOOTLOADER_BCR_CONFIG_ID_BCR_CONFIG_ID_OFS)&BOOTLOADER_BCR_CONFIG_ID_BCR_CONFIG_ID_MASK);
}

static inline void BOOTLOADER_BCR_CFG0_WRITE(BOOTLOADER_REGS_s * registers, uint32_t SWD_EN, uint32_t DAP_ACCESS) {
    registers->BCR_CFG0.packed_w =  + ((SWD_EN<<BOOTLOADER_BCR_CFG0_SWD_EN_OFS)&BOOTLOADER_BCR_CFG0_SWD_EN_MASK) + ((DAP_ACCESS<<BOOTLOADER_BCR_CFG0_DAP_ACCESS_OFS)&BOOTLOADER_BCR_CFG0_DAP_ACCESS_MASK);
}

static inline void BOOTLOADER_BCR_CFG1_WRITE(BOOTLOADER_REGS_s * registers, uint32_t BSL_GPIO_INVOKE, uint32_t BSL_GPIO_PIN) {
    registers->BCR_CFG1.packed_w =  + ((BSL_GPIO_INVOKE<<BOOTLOADER_BCR_CFG1_BSL_GPIO_INVOKE_OFS)&BOOTLOADER_BCR_CFG1_BSL_GPIO_INVOKE_MASK) + ((BSL_GPIO_PIN<<BOOTLOADER_BCR_CFG1_BSL_GPIO_PIN_OFS)&BOOTLOADER_BCR_CFG1_BSL_GPIO_PIN_MASK);
}

static inline void BOOTLOADER_BCR_CFG2_WRITE(BOOTLOADER_REGS_s * registers, uint32_t BSL_EN, uint32_t FASTBOOT_EN) {
    registers->BCR_CFG2.packed_w =  + ((BSL_EN<<BOOTLOADER_BCR_CFG2_BSL_EN_OFS)&BOOTLOADER_BCR_CFG2_BSL_EN_MASK) + ((FASTBOOT_EN<<BOOTLOADER_BCR_CFG2_FASTBOOT_EN_OFS)&BOOTLOADER_BCR_CFG2_FASTBOOT_EN_MASK);
}

static inline void BOOTLOADER_BCR_FLASH_WP_WRITE(BOOTLOADER_REGS_s * registers, uint32_t BCR_FLASH_WP) {
    registers->BCR_FLASH_WP.packed_w =  + ((BCR_FLASH_WP<<BOOTLOADER_BCR_FLASH_WP_BCR_FLASH_WP_OFS)&BOOTLOADER_BCR_FLASH_WP_BCR_FLASH_WP_MASK);
}

static inline void BOOTLOADER_BCR_CRCCFG0_WRITE(BOOTLOADER_REGS_s * registers, uint32_t APP_CRC_START) {
    registers->BCR_CRCCFG0.packed_w =  + ((APP_CRC_START<<BOOTLOADER_BCR_CRCCFG0_APP_CRC_START_OFS)&BOOTLOADER_BCR_CRCCFG0_APP_CRC_START_MASK);
}

static inline void BOOTLOADER_BCR_CRCCFG1_WRITE(BOOTLOADER_REGS_s * registers, uint32_t APP_CRC_END) {
    registers->BCR_CRCCFG1.packed_w =  + ((APP_CRC_END<<BOOTLOADER_BCR_CRCCFG1_APP_CRC_END_OFS)&BOOTLOADER_BCR_CRCCFG1_APP_CRC_END_MASK);
}

static inline void BOOTLOADER_BCR_CRCCFG2_WRITE(BOOTLOADER_REGS_s * registers, uint32_t EXP_CRC) {
    registers->BCR_CRCCFG2.packed_w =  + ((EXP_CRC<<BOOTLOADER_BCR_CRCCFG2_EXP_CRC_OFS)&BOOTLOADER_BCR_CRCCFG2_EXP_CRC_MASK);
}

static inline void BOOTLOADER_BSL_CONFIG_ID_WRITE(BOOTLOADER_REGS_s * registers, uint32_t BSL_CONFIG_ID) {
    registers->BSL_CONFIG_ID.packed_w =  + ((BSL_CONFIG_ID<<BOOTLOADER_BSL_CONFIG_ID_BSL_CONFIG_ID_OFS)&BOOTLOADER_BSL_CONFIG_ID_BSL_CONFIG_ID_MASK);
}

static inline void BOOTLOADER_BSL_UART_CFG0_WRITE(BOOTLOADER_REGS_s * registers, uint32_t UART_TX_PIN_SEL, uint32_t UART_TX_MUX_SEL, uint32_t UART_RX_PIN_SEL, uint32_t UART_RX_MUX_SEL) {
    registers->BSL_UART_CFG0.packed_w =  + ((UART_TX_PIN_SEL<<BOOTLOADER_BSL_UART_CFG0_UART_TX_PIN_SEL_OFS)&BOOTLOADER_BSL_UART_CFG0_UART_TX_PIN_SEL_MASK) + ((UART_TX_MUX_SEL<<BOOTLOADER_BSL_UART_CFG0_UART_TX_MUX_SEL_OFS)&BOOTLOADER_BSL_UART_CFG0_UART_TX_MUX_SEL_MASK) + ((UART_RX_PIN_SEL<<BOOTLOADER_BSL_UART_CFG0_UART_RX_PIN_SEL_OFS)&BOOTLOADER_BSL_UART_CFG0_UART_RX_PIN_SEL_MASK) + ((UART_RX_MUX_SEL<<BOOTLOADER_BSL_UART_CFG0_UART_RX_MUX_SEL_OFS)&BOOTLOADER_BSL_UART_CFG0_UART_RX_MUX_SEL_MASK);
}

static inline void BOOTLOADER_BSL_UART_CFG1_WRITE(BOOTLOADER_REGS_s * registers, uint32_t UART_CLK_DIV, uint32_t UART_M, uint32_t UART_N) {
    registers->BSL_UART_CFG1.packed_w =  + ((UART_CLK_DIV<<BOOTLOADER_BSL_UART_CFG1_UART_CLK_DIV_OFS)&BOOTLOADER_BSL_UART_CFG1_UART_CLK_DIV_MASK) + ((UART_M<<BOOTLOADER_BSL_UART_CFG1_UART_M_OFS)&BOOTLOADER_BSL_UART_CFG1_UART_M_MASK) + ((UART_N<<BOOTLOADER_BSL_UART_CFG1_UART_N_OFS)&BOOTLOADER_BSL_UART_CFG1_UART_N_MASK);
}

static inline void BOOTLOADER_BSL_I2C_CFG_WRITE(BOOTLOADER_REGS_s * registers, uint32_t SCL_PIN_SEL, uint32_t SCL_MUX_SEL, uint32_t SDA_PIN_SEL, uint32_t SDA_MUX_SEL) {
    registers->BSL_I2C_CFG.packed_w =  + ((SCL_PIN_SEL<<BOOTLOADER_BSL_I2C_CFG_SCL_PIN_SEL_OFS)&BOOTLOADER_BSL_I2C_CFG_SCL_PIN_SEL_MASK) + ((SCL_MUX_SEL<<BOOTLOADER_BSL_I2C_CFG_SCL_MUX_SEL_OFS)&BOOTLOADER_BSL_I2C_CFG_SCL_MUX_SEL_MASK) + ((SDA_PIN_SEL<<BOOTLOADER_BSL_I2C_CFG_SDA_PIN_SEL_OFS)&BOOTLOADER_BSL_I2C_CFG_SDA_PIN_SEL_MASK) + ((SDA_MUX_SEL<<BOOTLOADER_BSL_I2C_CFG_SDA_MUX_SEL_OFS)&BOOTLOADER_BSL_I2C_CFG_SDA_MUX_SEL_MASK);
}

static inline void BOOTLOADER_BSL_PWD_WRITE(BOOTLOADER_REGS_s * registers, uint32_t BSL_PWD) {
    registers->BSL_PWD.packed_w =  + ((BSL_PWD<<BOOTLOADER_BSL_PWD_BSL_PWD_OFS)&BOOTLOADER_BSL_PWD_BSL_PWD_MASK);
}

static inline void BOOTLOADER_BCR_CRCCFG3_WRITE(BOOTLOADER_REGS_s * registers, uint32_t EXP_BOOT_CRC) {
    registers->BCR_CRCCFG3.packed_w =  + ((EXP_BOOT_CRC<<BOOTLOADER_BCR_CRCCFG3_EXP_BOOT_CRC_OFS)&BOOTLOADER_BCR_CRCCFG3_EXP_BOOT_CRC_MASK);
}

